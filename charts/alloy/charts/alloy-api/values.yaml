replicaCount: 1

image:
  repository: cmusei/alloy-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# If this deployment needs to trust non-public certificates,
# create a configMap with the needed certifcates and specify
# the configMap name here
certificateMap: ''
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

command: ['bash', '-c', 'update-ca-certificates && dotnet Alloy.Api.dll']
identity:
  register: false
  # Identity ConfigMap that contains the seed.sh script
  identityMap: ''
  initCommand: ''
  # SAMPLE IDENTITY CONFIGS
  # client: |-
  #   [
  #     {
  #       "name": "alloy-api",
  #       "displayName": "Alloy API",
  #       "description": null,
  #       "grants": "authorization_code client_credentials",
  #       "scopes": "alloy-api vm-api caster-api steamfitter-api",
  #       "enabled": true,
  #       "requirePkce": true,
  #       "allowAccessTokensViaBrowser": false,
  #       "requireConsent": false,
  #       "consentLifetime": "30d",
  #       "alwaysIncludeUserClaimsInIdToken": false,
  #       "identityTokenLifetime": "5m",
  #       "accessTokenLifetime": "1h",
  #       "authorizationCodeLifetime": "5m",
  #       "allowOfflineAccess": false,
  #       "updateAccessTokenClaimsOnRefresh": false,
  #       "useOneTimeRefreshTokens": false,
  #       "slidingRefreshTokenLifetime": "15d",
  #       "absoluteRefreshTokenLifetime": "30d",
  #       "published": false,
  #       "url": "https://foundry.local/alloy",
  #       "logoUrl": null,
  #       "frontChannelLogoutUrl": null,
  #       "backChannelLogoutUrl": null,
  #       "redirectUrls": [
  #         { "value": "https://foundry.local/alloy/api/oauth2-redirect.html" }
  #       ],
  #       "postLogoutUrls": [{ "value": "https://foundry.local/alloy/api" }],
  #       "corsUrls": [{ "value": "https://foundry.local" }],
  #       "alwaysSendClientClaims": false,
  #       "clientClaimsPrefix": "client_",
  #       "claims": [],
  #       "secrets": [],
  #       "managers": []
  #     },
  #     {
  #       "name": "alloy-admin",
  #       "displayName": "Alloy Admin",
  #       "description": null,
  #       "grants": "password client_credentials",
  #       "scopes": "alloy-api caster-api steamfitter-api vm-api",
  #       "enabled": true,
  #       "requirePkce": true,
  #       "allowAccessTokensViaBrowser": false,
  #       "requireConsent": false,
  #       "consentLifetime": "30d",
  #       "alwaysIncludeUserClaimsInIdToken": false,
  #       "identityTokenLifetime": "5m",
  #       "accessTokenLifetime": "1h",
  #       "authorizationCodeLifetime": "5m",
  #       "allowOfflineAccess": false,
  #       "updateAccessTokenClaimsOnRefresh": false,
  #       "useOneTimeRefreshTokens": false,
  #       "slidingRefreshTokenLifetime": "15d",
  #       "absoluteRefreshTokenLifetime": "30d",
  #       "published": true,
  #       "url": "https://foundry.local/alloy",
  #       "logoUrl": null,
  #       "frontChannelLogoutUrl": null,
  #       "backChannelLogoutUrl": null,
  #       "corsUrls": [{ "value": "https://foundry.local" }],
  #       "alwaysSendClientClaims": false,
  #       "clientClaimsPrefix": "client_",
  #       "claims": [],
  #       "secrets": [],
  #       "managers": []
  #     }
  #   ]
  # resource: |-
  #   {
  #     "type": "api",
  #     "name": "alloy-api",
  #     "displayName": "Alloy Api",
  #     "enabled": true,
  #     "default": true,
  #     "required": false,
  #     "emphasize": false,
  #     "showInDiscoveryDocument": true
  #   }

  # account: |-
  #   {
  #     "usernames": ["alloy-admin@foundry.local"],
  #     "password": "foundry",
  #     "manager": true
  #   }
# env is pod env vars
env:
  # http_proxy:
  # https_proxy:
  # HTTP_PROXY:
  # HTTPS_PROXY:
  # NO_PROXY:
  # no_proxy:

  ## If hosting in virtual directory, specify path base
  PathBase: ""

  Logging__IncludeScopes: false
  Logging__Debug__LogLevel__Default: Information
  Logging__Debug__LogLevel__Microsoft: Error
  Logging__Debug__LogLevel__System: Error
  Logging__Console__LogLevel__Default: Information
  Logging__Console__LogLevel__Microsoft: Error
  Logging__Console__LogLevel__System: Error

  # database needs the 'uuid-ossp' extension installed
  ConnectionStrings__PostgreSQL: ''
  Database__AutoMigrate: true
  Database__DevModeRecreate: false
  Database__Provider: PostgreSQL

  CorsPolicy__Origins__0: http://localhost:4403
  CorsPolicy__Methods__0: ''
  CorsPolicy__Headers__0: ''
  CorsPolicy__AllowAnyOrigin: false
  CorsPolicy__AllowAnyMethod: true
  CorsPolicy__AllowAnyHeader: true
  CorsPolicy__SupportsCredentials: true

  Authorization__Authority: ''
  Authorization__AuthorizationUrl: ''
  Authorization__TokenUrl: ''
  Authorization__AuthorizationScope: 'alloy-api player-api caster-api steamfitter-api vm-api'
  Authorization__ClientId: alloy-api-dev
  Authorization__ClientName: 'Alloy API'
  Authorization__ClientSecret: ''
  Authorization__RequireHttpsMetaData: false

  ResourceOwnerAuthorization__Authority: ''
  ResourceOwnerAuthorization__ClientId: alloy-api
  ResourceOwnerAuthorization__ClientSecret: ''
  ResourceOwnerAuthorization__UserName: ''
  ResourceOwnerAuthorization__Password: ''
  ResourceOwnerAuthorization__Scope: 'alloy-api player-api caster-api steamfitter-api vm-api'
  ResourceOwnerAuthorization__TokenExpirationBufferSeconds: 900

  ClientSettings__BackgroundTimerIntervalSeconds: 60
  ClientSettings__BackgroundTimerHealthSeconds: 180
  ClientSettings__CasterCheckIntervalSeconds: 30
  ClientSettings__CasterPlanningMaxWaitMinutes: 15
  ClientSettings__CasterDeployMaxWaitMinutes: 120
  ClientSettings__CasterDestroyMaxWaitMinutes: 60
  ClientSettings__CasterDestroyRetryDelayMinutes: 1
  ClientSettings__ApiClientRetryIntervalSeconds: 10
  ClientSettings__ApiClientLaunchFailureMaxRetries: 10
  ClientSettings__ApiClientEndFailureMaxRetries: 10
  ClientSettings__urls__playerApi: ''
  ClientSettings__urls__casterApi: ''
  ClientSettings__urls__steamfitterApi: ''

  SeedData: ''

  ClaimsTransformation__EnableCaching: true
  ClaimsTransformation__CacheExpirationSeconds: 60

  Files__LocalDirectory: '/tmp/'

  Resource__MaxEventsForBasicUser: 2
