alloy-api:
  # Docker image release version
  image:
    tag: '2.0.2'

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: 'true'
    hosts:
      - host: alloy.example.com
        paths:
          - /(api|swagger/hubs)
    tls:
      - secretName: ''
        hosts:
          - example.com

  # If this deployment needs to trust non-public certificates,
  # create a configMap with the needed certifcates and specify
  # the configMap name here
  certificateMap: ''

  # Config app settings with environment vars.
  # Those most likely needing values are listed. For others,
  # see https://github.com/cmu-sei/crucible/blob/master/alloy.api/Alloy.Api/appsettings.json
  env:
    # Proxy Settings
    # http_proxy: proxy.example.com:9000
    # https_proxy: proxy.example.com:9000
    # HTTP_PROXY: proxy.example.com:9000
    # HTTPS_PROXY: proxy.example.com:9000
    # NO_PROXY: .local
    # no_proxy: .local
    
    ## If hosting in virtual directory, specify path base
    PathBase: ""

    # CORS policy settings.
    # The first entry should be the URL to Alloy
    CorsPolicy__Origins__0: https://alloy.example.com
    CorsPolicy__Origins__1: http://site2.com

    # Connection String to database
    # database requires the 'uuid-ossp' extension installed
    ConnectionStrings__PostgreSQL: 'Server=postgres;Port=5432;Database=alloy_api;Username=alloy_dbu;Password=;'

    # OAuth2 Identity Client for Application
    Authorization__Authority: https://identity.example.com
    Authorization__AuthorizationUrl: https://identity.example.com/connect/authorize
    Authorization__TokenUrl: https://identity.example.com/connect/token
    Authorization__AuthorizationScope: 'alloy-api player-api caster-api steamfitter-api vm-api'
    Authorization__ClientId: alloy-api-dev
    Authorization__ClientName: 'Alloy API'

    # OAuth2 Identity Client /w Password
    ResourceOwnerAuthorization__Authority: https://identity.example.com
    ResourceOwnerAuthorization__ClientId: alloy-api
    ResourceOwnerAuthorization__UserName:
    ResourceOwnerAuthorization__Password:
    ResourceOwnerAuthorization__Scope: 'alloy-api player-api caster-api steamfitter-api vm-api'

    # Crucible Application URLs
    ClientSettings__urls__playerApi: https://player.example.com/
    ClientSettings__urls__casterApi: https://caster.example.com/
    ClientSettings__urls__steamfitterApi: https://steamfitter.example.com/

alloy-ui:
  # Docker image release version
  image:
    tag: '2.0.1'

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: alloy.example.com
        paths:
          - /
    tls:
      - secretName: ''
        hosts:
          - example.com

  env: 
    ## basehref is path to the app
    APP_BASEHREF: ""

  # Config app settings with a JSON file.
  # These values correspond to an OpenID connect client and
  # some basic configuration
  # NOTE:  PlayerUIAddress is the URL to the Crucible - Player application
  settings: '{
    "ApiUrl": "https://alloy.example.com",
    "OIDCSettings": {
    "authority": "https://identity.example.com/",
    "client_id": "alloy-ui",
    "redirect_uri": "https://alloy.example.com/auth-callback",
    "post_logout_redirect_uri": "https://alloy.example.com",
    "response_type": "code",
    "scope": "openid profile alloy-api player-api caster-api steamfitter-api vm-api",
    "automaticSilentRenew": true,
    "silent_redirect_uri": "https://alloy.example.com/auth-callback-silent"
    },
    "AppTitle": "Alloy",
    "AppTopBarText": "Alloy",
    "AppTopBarHexColor": "#b00",
    "PlayerUIAddress": "https://player.example.com",
    "UseLocalAuthStorage": true
    }'
