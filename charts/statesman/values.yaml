statesman-api:

  replicaCount: 1
  image:
    repository: cmusei.azurecr.us/statesman-api
    tag: ""

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: ["/api", "/hub"]
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  ## persistence; set existing pvc or size of new pvc
  storage:
    existing: ""
    size: ""
    mode: ReadWriteOnce
    class: default

  ## application settings can be entered as env vars or json, or both
  env: {}
    # Authorization__Authority: ""
    # Authorization__AppClient__ClientId: "statesman-app"
    # Authorization__AppClient__ClientSecret: ""
    # Authorization__AppClient__Scopes: "openid profile statesman-api"
    # Authorization__SwaggerClient__ClientId: "statesman-swagger"
    # Authorization__Administrators__0: ""
    # Authorization__Observers__0: ""
    # Headers__Forwarding__TargetHeaders: "All"

statesman-ui:
  replicaCount: 1
  image:
    repository: cmusei.azurecr.us/statesman-ui
    tag: ""

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: ["/"]
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # limits:
    #   cpu: 20m
    #   memory: 20Mi
    # requests:
    #   cpu: 10m
    #   memory: 10Mi

  ## basehref is the path to the app; if serving the app as a virtual folder
  # basehref: /app/one
  basehref: ""

  ## openGraph is string of html head metadata (single line!)
  # openGraph: >-
  #   <!-- Open Graph info for link previews -->
  #   <meta property="og:title" content="AppNmae" />
  #   <meta property="og:type" content="website" />
  #   <meta property="og:url" content="https://some.url" />
  #   <meta property="og:image" content="https://some.url/logo.png" />
  #   <meta property="og:description" content="description" />

  ## faviconsUrl is a url to tgz of icon bundle. If bundle has favicon.html,
  ## its contents will be merged into index.html head element.
  # faviconsUrl: "https://some.url/favs.tgz"

  ## settings is stringified json that gets included as assets/settings.json
  settings: "{}"

statesman-mks:
  replicaCount: 1
  image:
    repository: cmusei.azurecr.us/statesman-mks
    tag: ""

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: ["/mks"]
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # limits:
    #   cpu: 20m
    #   memory: 20Mi
    # requests:
    #   cpu: 10m
    #   memory: 10Mi

  ## basehref is the path to the app; if serving the app as a virtual folder
  # basehref: /app/one
  basehref: "/mks"

  ## openGraph is string of html head metadata (single line!)
  # openGraph: >-
  #   <!-- Open Graph info for link previews -->
  #   <meta property="og:title" content="AppNmae" />
  #   <meta property="og:type" content="website" />
  #   <meta property="og:url" content="https://some.url" />
  #   <meta property="og:image" content="https://some.url/logo.png" />
  #   <meta property="og:description" content="description" />

  ## faviconsUrl is a url to tgz of icon bundle. If bundle has favicon.html,
  ## its contents will be merged into index.html head element.
  # faviconsUrl: "https://some.url/favs.tgz"

  ## settings is stringified json that gets included as assets/settings.json
  settings: "{}"
