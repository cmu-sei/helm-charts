# Default values for topomojo-api.
# Declare variables to be passed into your templates.

image:
  repository: cmusei/topomojo-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service: {}
#   type: ClusterIP
#   port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /api
          pathType: ImplementationSpecific
        - path: /hub
          pathType: ImplementationSpecific
        - path: /docs
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Optional second ingress for topomojo api
# - This ingress is used as a proxy for getting a websocket
#   console connection to vCenter hosts.
# - TLS and Host URLs need configured, but the snippet should be left alone
#
# Topomojo is hardcoded to pass the vmware host using a query parameter named "vmhost".
# nginx supports a syntax to resolve variables of the form $arg_name to a query
# parameter with key "name" in the request line.
# That parameter is "vmhost" for this case.
#
# nginx resolves $1 to the value of the first capture group of the regex for location:
# /console/ticket/(.*)
# so this means we expect the ticket number to be whatever value is after
# /console/ticket/ in the request path.
#
# An example websocket request that would match this rule is:
# wss://connect.example.com/console/ticket/6e71189b23e5ade2?vmhost=10.4.52.68
#
# NOTES:
# - This is only used if deployConsoleProxy below is true, otherwise
#   connections will go directly from the UI to the vCenter hosts themselves
# This ingress requires the following properties to be set on the nginx controller via the ConfigMap
#    allow-snippet-annotations: true
#    annotations-risk-level: critical  # Became necessary as of ingress-nginx helm chart v4.12
consoleIngress:
  deployConsoleProxy: false
  className: ""
  namespace:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/server-snippet: |
      # Adding proxy configuration for consoles
      location ~ /console/ticket/(.*) {
        proxy_pass https://$arg_vmhost/ticket/$1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_request_buffering off;
        proxy_buffering off;
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_ssl_session_reuse on;
      }
  hosts:
    - host: connect.example.com
      paths: []
  tls:
    - secretName: ""
      hosts:
        - connect.example.com

health: {}
  # livenessProbe:
  #   httpGet:
  #     port: 8080
  #     path: /api/healthz/<template_id>
  #     httpHeaders:
  #       - name: Accept
  #         value: "*/*"
  #   initialDelaySeconds: 120
  #   periodSeconds: 60
  #   timeoutSeconds: 3
  #   failureThreshold: 2

  # startupProbe:
  #   httpGet:
  #     port: 8080
  #     path: /api/healthz/<template_id>
  #     httpHeaders:
  #       - name: Accept
  #         value: "*/*"
  #   initialDelaySeconds: 10
  #   periodSeconds: 10
  #   timeoutSeconds: 3
  #   failureThreshold: 60

  # readinessProbe:
  #   httpGet:
  #     port: 8080
  #     path: /api/healthz/<template_id>
  #     httpHeaders:
  #       - name: Accept
  #         value: "*/*"
  #   initialDelaySeconds: 120
  #   periodSeconds: 10
  #   timeoutSeconds: 3

# storage - either an existing pvc, the size for a new pvc, or emptyDir
storage:
  existing: ""
  size: ""
  mode: ReadWriteOnce
  class: default

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 200m
  #   memory: 512Mi
  # requests:
  #   cpu: 100m
  #   memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

## migrations sets how data migrations run
## If enabled, all replicas will wait until a single migration job runs.
## this is important if running multiple replicas or if you use different
## connection strings (permissions) for building the database versus using it.
## If using a single connection string, no need to specify here. It will use values
## from `env` below.
## NOTE: the serviceAccount must have permission to `get batch.jobs`.
## If you create the serviceAccount above, it will get a RoleBinding to a Role with that allowed.
migrations:
  enabled: false
  restartPolicy: Never
  Database__Provider: ""
  Database__ConnectionString: ""
  env: {}

## customStart overrides the default start process.  Files are mounted in `/start`
customStart: {}
  # command: ['/bin/sh']
  # args: ['/start/start.sh']
  # binaryFiles: {}
  # files:
  #   start.sh: |
  #     #!/bin/sh
  #     cp /start/*.crt /usr/local/share/ca-certificates && update-ca-certificates
  #     cd /app && dotnet TopoMojo.Api.dll
  #   cacert.crt: ""

## existingSecret references a secret already in k8s. The values are saved as files in `/home/app/conf`.
existingSecret: ""

# Config app settings with environment vars.
# Those most likely needing values are listed. For others,
# see https://github.com/cmu-sei/TopoMojo/blob/master/src/TopoMojo.Api/appsettings.conf
env:
  ## By default we change ownership of the paths at and recursively below the root of the topomojo docs directory
  ## to that of the running user and group, which are both 1654 per .NET conventions.
  SKIP_VOL_PERMISSIONS: "false"
  # PathBase: ""
  # Oidc__Audience: topomojo-api
  # Oidc__Authority: http://localhost:5000
  ## Set this to the string "null" to disable client credentials authentication (enabled by default)
  # Oidc__ServiceAccountClientIdClaimType: client_id
  # Database__Provider: InMemory
  # Database__ConnectionString: topomojo_db
  # Database__SeedFile: seed-data.json
  # Database__AdminId: ""
  # Database__AdminName: ""
  # Cache__RedisUrl: ""
  # Cache__Key: ""
  # Cache__SharedFolder: ""
  # OpenApi__Enabled: true
  # OpenApi__ApiName: TopoMojo
  # OpenApi__Client__ClientId: topomojo-swagger
  # FileUpload__TopoRoot: tm
  # FileUpload__IsoRoot: tm/isos
  # FileUpload__DocRoot: tm/_docs
  # Core__DefaultGamespaceMinutes: 120
  # Core__DefaultGamespaceLimit: 2
  # Core__DefaultWorkspaceLimit: 0
  # Core__DefaultTemplateLimit: 3
  # Core__DefaultUserScope: everyone
  # Core__ReplicaLimit: 5
  # Core__NetworkHostTemplateId: 0
  # Core__GameEngineIsoFolder: static
  # Core__ConsoleHost: ""
  # Core__LaunchUrl: /lp?
  # Core__DocPath: wwwroot/docs
  # Core__AllowUnprivilegedVmReconfigure: false
  # Pod__Url: ""
  # Pod__User: ""
  # Pod__Password: ""
  # Pod__PoolPath: ""
  # Pod__Uplink: vSwitch0
  # Pod__VmStore: ""
  # Pod__IsoStore: ""
  # Pod__DiskStore: ""
  # Pod__TicketUrlHandler: querystring
  # Pod__Vlan__Range: ""
  # Pod__KeepAliveMinutes: 10
  # Pod__DebugVerbose: false
  # Pod__IsNsxNetwork: false
  # Pod__Sddc__ApiUrl: ""
  # Pod__Sddc__MetadataUrl: ""
  # Pod__Sddc__SegmentApiPath = policy/api/v1/infra/tier-1s/cgw/segments
  # Pod__Sddc__ApiKey: ""
  # Pod__Sddc__AuthUrl: ""
  # Pod__Sddc__CertificatePath: ""
  # Pod__Sddc__CertificatePassword: ""
  # Logging__Console__DisableColors: false
  # Logging__LogLevel__Default: Information
