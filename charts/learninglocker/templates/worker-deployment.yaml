{{- $appName := include "learninglocker.name" . -}}
{{- $appFullName := include "learninglocker.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $appFullName }}-worker
  labels:
    app: {{ $appName }}
    component: worker
    chart: {{ $appFullName }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  selector:
    matchLabels:
      app: {{ $appName }}
      component: worker
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ $appName }}
        component: worker
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - node
            - worker/dist/server
          envFrom:
            - secretRef:
                name: {{ $appFullName }}-env
          volumeMounts:
            - name: {{ $appName }}-vol
              subPath: learninglocker
              mountPath: /app/storage
          resources:
{{ toYaml .Values.worker.resources | indent 12 }}
    {{- with .Values.worker.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.worker.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.worker.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      {{- if .Values.storage.existing }}
      - name: {{ $appName }}-vol
        persistentVolumeClaim:
          claimName: {{ .Values.storage.existing }}
      {{- else }}
      - name: {{ $appName }}-vol
        emptyDir: {}
      {{- end }}
