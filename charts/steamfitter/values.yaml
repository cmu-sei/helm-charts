steamfitter-api:

  # Docker image release version
  image:
    tag: "2.0.5"
  
  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
      - host: steamfitter.example.com
        paths:
          - path: /(api|swagger|hubs)
            pathType: ImplementationSpecific
    tls:
      - secretName: ""
        hosts:
         - example.com

  # If this deployment needs to trust non-public certificates,
  # create a configMap with the needed certifcates and specify
  # the configMap name here
  certificateMap: ""

  identity:
    register: false
    identityMap: ''
    initCommand: ''
    # SAMPLE IDENTITY CONFIGS
    # client: |-
    #   {
    #     "name": "steamfitter-api",
    #     "displayName": "Steamfitter API",
    #     "description": null,
    #     "grants": "authorization_code client_credentials",
    #     "scopes": "steamfitter-api vm-api player-api",
    #     "enabled": true,
    #     "requirePkce": true,
    #     "allowAccessTokensViaBrowser": false,
    #     "requireConsent": false,
    #     "consentLifetime": "30d",
    #     "alwaysIncludeUserClaimsInIdToken": false,
    #     "identityTokenLifetime": "5m",
    #     "accessTokenLifetime": "1h",
    #     "authorizationCodeLifetime": "5m",
    #     "allowOfflineAccess": false,
    #     "updateAccessTokenClaimsOnRefresh": false,
    #     "useOneTimeRefreshTokens": false,
    #     "slidingRefreshTokenLifetime": "15d",
    #     "absoluteRefreshTokenLifetime": "30d",
    #     "published": false,
    #     "url": "https://example.com/steamfitter",
    #     "logoUrl": null,
    #     "frontChannelLogoutUrl": null,
    #     "backChannelLogoutUrl": null,
    #     "redirectUrls": [
    #       { "value": "https://example.com/steamfitter/api/oauth2-redirect.html" }
    #     ],
    #     "postLogoutUrls": [{ "value": "https://example.com/steamfitter/api" }],
    #     "corsUrls": [{ "value": "https://example.com" }],
    #     "alwaysSendClientClaims": false,
    #     "clientClaimsPrefix": "client_",
    #     "claims": [],
    #     "secrets": [],
    #     "managers": []
    #   }
      
    # resource: |-
    #   {
    #     "type": "api",
    #     "name": "steamfitter-api",
    #     "displayName": "Steamfitter Api",
    #     "enabled": true,
    #     "default": true,
    #     "required": false,
    #     "emphasize": false,
    #     "showInDiscoveryDocument": true
    #   }

  # Config app settings with environment vars.
  # Those most likely needing values are listed. For others,
  # see https://github.com/cmu-sei/crucible/blob/master/steamfitter.api/Steamfitter.Api/appsettings.json
  env:
    # Proxy Settings
    # https_proxy: proxy.example.com:9000
    # http_proxy: proxy.example.com:9000
    # HTTP_PROXY: proxy.example.com:9000
    # HTTPS_PROXY: proxy.example.com:9000
    # NO_PROXY: .local
    # no_proxy: .local

    ## If hosting in virtual directory, specify path base
    PathBase: ""

    # Connection String to database
    # database requires the 'uuid-ossp' extension installed
    ConnectionStrings__PostgreSQL: "Server=postgres;Port=5432;Database=steamfitter_api;Username=steamfitter_dbu;Password=;"

    # CORS policy settings.
    # The first entry should be the URL to Steamfitter
    CorsPolicy__Origins__0: https://steamfitter.example.com

    # OAuth2 Identity Client for Application
    Authorization__Authority: https://identity.example.com
    Authorization__AuthorizationUrl: https://identity.example.com/connect/authorize
    Authorization__TokenUrl: https://identity.example.com/connect/token
    Authorization__AuthorizationScope: "player-api steamfitter-api vm-api"
    Authorization__ClientId: steamfitter-api-dev
    Authorization__ClientName: "Steamfitter API"

    # OAuth2 Identity Client /w Password
    ResourceOwnerAuthorization__Authority: https://identity.example.com
    ResourceOwnerAuthorization__ClientId: steamfitter-api
    ResourceOwnerAuthorization__UserName: 
    ResourceOwnerAuthorization__Password: 
    ResourceOwnerAuthorization__Scope: "vm-api"

    # Crucible URLs
    ClientSettings__urls__playerApi: https://player.example.com/
    ClientSettings__urls__vmApi: https://vm.example.com/

    # Stackstorm Configuration
    # TODO - Document Stackstorm dependencies
    VmTaskProcessing__ApiType: st2
    VmTaskProcessing__ApiUsername: "st2admin"
    VmTaskProcessing__ApiPassword: 
    VmTaskProcessing__ApiBaseUrl: "https://stackstorm.example.com"
    VmTaskProcessing__ApiParameters__clusters: ""

    # Basic seed data to jumpstart deployement
    # TODO - Document Seed data
    # SeedData__Users__0__id: ""
    # SeedData__Users__0__name: ""

    # SeedData__Users__1__id: ""
    # SeedData__Users__1__name: ""

    # SeedData__UserPermissions__0__UserId: ""
    # SeedData__UserPermissions__0__PermissionId: ""
    # SeedData__UserPermissions__1__UserId: ""
    # SeedData__UserPermissions__1__PermissionId: ""

steamfitter-ui:

  # Docker image release version
  image:
    tag: "2.0.5"

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: steamfitter.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: ""
        hosts:
         - example.com

  identity:
    register: false
    identityMap: ''
    initCommand: ''
    # SAMPLE IDENTITY CONFIGS
    # client: |-
    #   {
    #     "name": "steamfitter-ui",
    #     "displayName": "Steamfitter UI",
    #     "description": null,
    #     "grants": "authorization_code client_credentials",
    #     "scopes": "openid profile steamfitter-api vm-api player-api",
    #     "enabled": true,
    #     "requirePkce": true,
    #     "allowAccessTokensViaBrowser": true,
    #     "requireConsent": false,
    #     "consentLifetime": "30d",
    #     "alwaysIncludeUserClaimsInIdToken": false,
    #     "identityTokenLifetime": "5m",
    #     "accessTokenLifetime": "1h",
    #     "authorizationCodeLifetime": "5m",
    #     "allowOfflineAccess": false,
    #     "updateAccessTokenClaimsOnRefresh": false,
    #     "useOneTimeRefreshTokens": false,
    #     "slidingRefreshTokenLifetime": "15d",
    #     "absoluteRefreshTokenLifetime": "30d",
    #     "published": true,
    #     "url": "https://example.com/steamfitter",
    #     "logoUrl": null,
    #     "frontChannelLogoutUrl": null,
    #     "backChannelLogoutUrl": null,
    #     "redirectUrls": [
    #       { "value": "https://example.com/steamfitter/auth-callback" },
    #       { "value": "https://example.com/steamfitter/auth-callback-silent" }
    #     ],
    #     "postLogoutUrls": [{ "value": "https://example.com/steamfitter" }],
    #     "corsUrls": [{ "value": "https://example.com" }],
    #     "alwaysSendClientClaims": false,
    #     "clientClaimsPrefix": "client_",
    #     "claims": [],
    #     "secrets": [],
    #     "managers": []
    #   }

  env: 
    ## basehref is path to the app
    APP_BASEHREF: ""

  # Config app settings with a JSON file.
  # These values correspond to an OpenID connect client
  settings: |-
    {
      "ApiUrl": "https://steamfitter.example.com",
      "VmApiUrl": "https://vm.example.com",
      "ApiPlayerUrl": "https://player.example.com",
      "OIDCSettings": {
          "authority": "https://identity.example.com",
          "client_id": "steamfitter-ui-dev",
          "redirect_uri": "https://steamfitter.example.com/auth-callback/",
          "post_logout_redirect_uri": "https://steamfitter.example.com",
          "response_type": "code",
          "scope": "openid profile player-api vm-api steamfitter-api",
          "automaticSilentRenew": true,
          "silent_redirect_uri": "https://steamfitter.example.com/auth-callback-silent/"
      },
      "UseLocalAuthStorage": true
    }