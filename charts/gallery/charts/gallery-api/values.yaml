# Default values for gallery-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cmusei/gallery-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# If this deployment needs to trust non-public certificates,
# create a configMap with the needed certifcates and specify
# the configMap name here
certificateMap: ''

command: ['bash', '-c', 'update-ca-certificates && dotnet Api.dll']

# env is pod env vars
env:
  # http_proxy: ""
  # https_proxy: ""
  # HTTP_PROXY: ""
  # HTTPS_PROXY: ""
  # NO_PROXY: ""
  # no_proxy: ""

  Logging__IncludeScopes: false
  Logging__Debug__LogLevel__Default: Warning
  Logging__Debug__LogLevel__Microsoft: Warning
  Logging__Debug__LogLevel__System: Warning
  Logging__Console__LogLevel__Default: Warning
  Logging__Console__LogLevel__Microsoft: Warning
  Logging__Console__LogLevel__System: Warning

  # database requires the 'uuid-ossp' extension installed
  ConnectionStrings__PostgreSQL: ''
  Database__AutoMigrate: true
  Database__DevModeRecreate: false
  Database__Provider: PostgreSQL
  Database__SeedFile: seed-data.json

  CorsPolicy__Origins__0: ''
  CorsPolicy__Methods__0: ''
  CorsPolicy__Headers__0: ''
  CorsPolicy__AllowAnyOrigin: false
  CorsPolicy__AllowAnyMethod: true
  CorsPolicy__AllowAnyHeader: true
  CorsPolicy__SupportsCredentials: true

  Authorization__Authority: ''
  Authorization__AuthorizationUrl: ''
  Authorization__TokenUrl: ''
  Authorization__AuthorizationScope: 'gallery'
  Authorization__ClientId: gallery.swagger
  Authorization__ClientName: 'Gallery API Swagger'
  Authorization__ClientSecret: ''
  Authorization__RequireHttpsMetaData: false

  ClaimsTransformation__EnableCaching: true
  ClaimsTransformation__CacheExpirationSeconds: 60