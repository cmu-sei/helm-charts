gallery-api:
  # Docker image release version. Defaults to appVersion of gallery-api child chart
  image:
    tag: ""

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-read-timeout: '86400'
      nginx.ingress.kubernetes.io/proxy-send-timeout: '86400'
      nginx.ingress.kubernetes.io/use-regex: 'true'
    hosts:
      - host: gallery.example.com
        paths:
          - path: /(api|swagger/hubs)
            pathType: ImplementationSpecific
    tls:
      - secretName: ''
        hosts:
          - example.com

  ## existingSecret references a secret already in k8s. 
  ## The key/value pairs in the secret are added as environment variables.
  existingSecret: ""

  env:
    # CORS policy settings.
    # The first entry should be the URL to Gallery
    CorsPolicy__Origins__0: https://gallery.example.com

        # Connection String to database
    # database requires the 'uuid-ossp' extension installed
    ConnectionStrings__PostgreSQL: 'Server=postgres;Port=5432;Database=gallery_api;Username=gallery_dbu;Password=;'

    # OAuth2 Identity Client for Application
    Authorization__Authority: https://identity.example.com
    Authorization__AuthorizationUrl: https://identity.example.com/connect/authorize
    Authorization__TokenUrl: https://identity.example.com/connect/token
    Authorization__AuthorizationScope: gallery
    Authorization__ClientId: gallery.swagger
    Authorization__ClientName: Gallery API Swagger

gallery-ui:
  # Docker image release version. Defaults to appVersion of gallery-ui child chart
  image:
    tag: ""

  # Ingress configuration example for NGINX
  # TLS and Host URLs need configured
  ingress:
    enabled: true
    className: ""
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: gallery.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: ''
        hosts:
          - example.com

  ## extraVolumeMounts and extraVolumes are stringified YAML of kubernetes volume definitions
  # Example use to overwrite the dropdown indicator from a file in a configMap:
  #
  # extraVolumes: |
  #   - name: "replacement-icon-vol"
  #      configMap:
  #        name: "replacement-icons"
  #
  # extraVolumeMounts: |
  #   - name: "replacement-icon-vol"
  #     mountPath: /usr/share/nginx/html/assets/svg-icons/ic_expand_more.svg
  #     subPath: ic_expand_more.svg
  #
  # See kubernetes documentation for configuring your volumes:
  # https://kubernetes.io/docs/concepts/storage/volumes/
  extraVolumes: ""

  extraVolumeMounts: ""

  env:

  ## settings is stringified json that gets included as assets/settings.json
  settings: "{}"

  ## assets/settings.json content in yaml form. Takes precedence over settings: value when populated.
  settingsYaml:
    # ApiUrl: https://gallery.example.com
    # OIDCSettings:
    #   authority: https://identity.example.com/
    #   client_id: gallery-ui
    #   redirect_uri: https://gallery.example.com/auth-callback
    #   post_logout_redirect_uri: https://gallery.example.com
    #   response_type: code
    #   scope: openid profile gallery
    #   automaticSilentRenew: true
    #   silent_redirect_uri: https://gallery.example.com/auth-callback-silent
    # AppTitle: Gallery
    # AppTopBarHexColor: "#2d69b4"
    # AppTopBarHexTextColor: "#FFFFFF"
    # AppTopBarText: Gallery  -  Exercise Information Sharing
    # AppTopBarImage: /assets/img/monitor-dashboard-white.png
    # UseLocalAuthStorage: true

