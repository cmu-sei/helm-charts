# Default values for caster-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cmusei/caster-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# If this deployment needs to trust non-public certificates,
# create a configMap with the needed certifcates and specify
# the configMap name here
certificateMap: ''

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

command:
  [
    'bash',
    '-c',
    'update-ca-certificates && /install-terraform.sh && dotnet Caster.Api.dll',
  ]

nodeSelector: {}

tolerations: []

affinity: {}

# storage - either an existing pvc, the size for a new pvc, or emptyDir
storage:
  existing: ''
  size: ''
  mode: ReadWriteOnce
  class: default

gitconfig: ''

env:
  # http_proxy:
  # https_proxy:
  # HTTP_PROXY:
  # HTTPS_PROXY:
  # NO_PROXY:
  # no_proxy:

  ## If hosting in virtual directory, specify path base
  PathBase: ""

  SKIP_TERRAFORM_INSTALLATION: false

  VSPHERE_SERVER:
  VSPHERE_USER:
  VSPHERE_PASSWORD:
  VSPHERE_ALLOW_UNVERIFIED_SSL: true

  AllowedHosts: '*'

  Logging__IncludeScopes: false
  Logging__Debug__LogLevel__Default: Information
  Logging__Debug__LogLevel__Microsoft: Error
  Logging__Debug__LogLevel__System: Error
  Logging__Console__LogLevel__Default: Information
  Logging__Console__LogLevel__Microsoft: Error
  Logging__Console__LogLevel__System: Error

  CorsPolicy__Origins__0: http://localhost:4310
  CorsPolicy__Methods__0: ''
  CorsPolicy__Headers__0: ''
  CorsPolicy__AllowAnyOrigin: false
  CorsPolicy__AllowAnyMethod: true
  CorsPolicy__AllowAnyHeader: true
  CorsPolicy__SupportsCredentials: true

  ClaimsTransformation__EnableCaching: true
  ClaimsTransformation__CacheExpirationSeconds: 60

  # database requires the 'uuid-ossp' extension installed
  ConnectionStrings__PostgreSQL: ''
  Database__AutoMigrate: true
  Database__DevModeRecreate: false
  Database__Provider: PostgreSQL

  Authorization__Authority:
  Authorization__AuthorizationUrl:
  Authorization__AuthorizationScope: 'caster-api'
  Authorization__ClientId: caster-api-dev
  Authorization__ClientName: 'Caster API'
  Authorization__ClientSecret: ''
  Authorization__RequireHttpsMetaData: false

  Client__TokenUrl: ''
  Client__ClientId: caster-admin
  Client__ClientSecret: ''
  Client__UserName: ''
  Client__Password: ''
  Client__Scope: 'player-api vm-api'
  Client__MaxRetryDelaySeconds: 120
  Client__TokenRefreshSeconds: 600

  Player__VmApiUrl: ''
  Player__VmConsoleUrl: ''
  Player__MaxParallelism: 8
  Player__RemoveLoopSeconds: 300

  Terraform__BinaryPath: '/terraform/binaries'
  Terraform__DefaultVersion: '0.12.24'
  Terraform__PluginDirectory: '/terraform/plugins/linux_amd64'
  Terraform__RootWorkingDirectory: '/terraform/root'
  Terraform__GitlabApiUrl: 'https://gitlab.com/api/v4/'
  Terraform__GitlabToken: ''
  Terraform__GitlabGroupId: 6
  Terraform__OutputSaveInterval: 5000
  Terraform__StateRetryCount: 12
  Terraform__StateRetryIntervalSeconds: 5

  FileVersions__DaysToSaveAllUntaggedVersions: 7
  FileVersions__DaysToSaveDailyUntaggedVersions: 31

  SeedData__Permissions__0__Id: '00000000-0000-0000-0000-000000000001'
  SeedData__Permissions__0__Key: 'SystemAdmin'
  SeedData__Permissions__0__Value: 'true'
  SeedData__Permissions__0__Description: 'Has Full Rights.  Can do everything.'
  SeedData__Permissions__0__ReadOnly: true
  SeedData__Permissions__1__Id: '00000000-0000-0000-0000-000000000002'
  SeedData__Permissions__1__Key: 'ContentDeveloper'
  SeedData__Permissions__1__Value: 'true'
  SeedData__Permissions__1__Description: 'Can create/edit/delete an Exercise/Directory/Workspace/File/Module'
  SeedData__Permissions__1__ReadOnly: true
